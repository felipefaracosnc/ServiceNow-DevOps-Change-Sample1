# This workflow uses ServiceNow custom actions that are certified by ServiceNow.

name: CICD GitHub workflow

on: workflow_dispatch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  #   types: [opened, synchronize, reopened]

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean compile

  test:
    name: 'Test'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.0.0

    - name: Set Timezone
      # You may pin to the exact commit or the version.
      # uses: szenius/set-timezone@ce9c440bc3af4f51b28d7ef7e5c47ee8f26c8dcb
      uses: szenius/set-timezone@v1.2
      with:
        # Desired timezone for MacOS
        timezoneMacos: "Asia/Singapore"
        
    - name: Run Tests with Maven
      run: mvn -B test --file pom.xml

    # - name: ServiceNow DevOps Unit Test Results 
    # # You may pin to the exact commit or the version.
    #   uses: ServiceNow/servicenow-devops-test-report@v3.1.0 
    #   with:
    #       # Devops Integration Token
    #       devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
    #       # ServiceNow Instance Name
    #       instance-url: ${{ secrets.SN_INSTANCE_URL }}
    #       # Orchestration Tool Id
    #       tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
    #       # Job Name
    #       job-name: 'Test' # Should be same name as declared in 'name' clause of the current Stage
    #       # Github Context
    #       context-github: ${{ toJSON(github) }}
    #       # JUnit xml report file name with path
    #       xml-report-filename: target/surefire-reports/testng-results.xml # if only JUnit tests, use target/surefire-reports/testng-results.xml
    #                                                                       # if both JUnit & TestNG tests, use target/surefire-reports/testng-junit-results/testng-results.xml

  # registerArtifact:
  #   name: 'Register Artifact'
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: ServiceNow DevOps Register Artifact
  #   # You may pin to the exact commit or the version.          
  #     uses: ServiceNow/servicenow-devops-register-artifact@v3.1.0
  #     with:
  #         # Devops Integration Token
  #         devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
  #         # ServiceNow Instance URL
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         # Orchestration Tool Id
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         # Display Name of the Job
  #         job-name: 'Register Artifact'
  #         # Github Context
  #         context-github: ${{ toJSON(github) }}
  #         # List of Artifacts to be registered
  #         artifacts: '[
  #             {
  #                 "name": "app-devops-cicd.jar",
  #                 "version": "1.${{ github.run_number }}",
  #                 "semanticVersion": "1.${{ github.run_number }}.0",
  #                 "repositoryName": "${{ github.repository }}"
  #             }
  #         ]'

  # sonarScan:
  #   name: 'Sonar Scan'
  #   needs: test #registerArtifact
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4.0.0
  #     with:
  #       fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    # - name: Set up JDK 17
    #   uses: actions/setup-java@v3
    #   with:
    #     java-version: 17
    #     distribution: 'zulu' # Alternative distribution options are available.
    # - name: Cache SonarCloud packages
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/.sonar/cache
    #     key: ${{ runner.os }}-sonar
    #     restore-keys: ${{ runner.os }}-sonar
    # - name: Cache Maven packages
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/.m2
    #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: ${{ runner.os }}-m2
    # - name: Build and analyze
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}  # Needed to get PR information, if any
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #   run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}

    
    # - name: ServiceNow DevOps Sonar Scan Results
    # # You may pin to the exact commit or the version.     
    #   uses: ServiceNow/servicenow-devops-sonar@v2.0.0
    #   with:
    #       # ServiceNow Instance URL
    #       instance-url: ${{ secrets.SN_INSTANCE_URL }}
    #       # Devops Integration Token
    #       devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
    #       # Orchestration Tool Id
    #       tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
    #       # Github Context
    #       context-github: ${{ toJSON(github) }}
    #       # Display Name of the Job
    #       job-name: 'Sonar Scan'
    #       # Sonar Host URL
    #       sonar-host-url: ${{ secrets.SONAR_URL }}
    #       # Sonar Project Key
    #       sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}

  # securityScan:
  #   name: 'Security Scan'
  #   needs: sonarScan
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4.0.0

  #   - name: ServiceNow DevOps Security Results
  #     uses: ServiceNow/servicenow-devops-security-result@v3.0.0
  #     with:
  #         # Devops Integration Token
  #         devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         context-github: ${{ toJSON(github) }}
  #         job-name: 'Security Scan'
  #         security-result-attributes: '{ "scanner": "${{ secrets.SCANNER_NAME }}", "applicationName": "${{ secrets.VULNERABILITY_APPLICATION_NAME }}", "securityToolId": "<securityToolSysId>" }'

  # registerPackage:
  #   name: 'Register Package'
  #   needs: sonarScan
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: ServiceNow DevOps Register Package
  #   # You may pin to the exact commit or the version.           
  #     uses: ServiceNow/servicenow-devops-register-package@v3.1.0
  #     with:
  #         # Devops Integration Token
  #         devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
  #         # ServiceNow Instance URL
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         # Orchestration Tool Id of the tool created in ServiceNow
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         # Github Context
  #         context-github: ${{ toJSON(github) }}
  #         # List of Artifacts in JSON format
  #         artifacts: '[
  #             {
  #                 "name": "app-devops-cicd.jar",
  #                 "version": "1.${{ github.run_number }}",
  #                 "semanticVersion": "1.${{ github.run_number }}.0",
  #                 "repositoryName": "${{ github.repository }}"
  #             }
  #         ]'
  #         # Name of the Package that contains list of artifacts
  #         package-name: 'app-devops-change-velocity-cicd.war'
  #         # Display Name of Job
  #         job-name: 'Register Package'
          
  change:
    # jobs that must complete successfully before this job will run
    needs: test #sonarScan #registerPackage 
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change Automation'
    steps:
      - name: ServiceNow Change
        uses: ServiceNow/servicenow-devops-change@dev
        with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # GitHub Context
          context-github: ${{ toJSON(github) }}
          # Display Name of the Job
          job-name: 'ServiceNow DevOps Change Automation'
          #change-request: '{"attributes":{"chg_model":{"name":"DevOps"}, "requested_by":{"name": "DevOps System"},"assignment_group":{"name": "Change management"},"priority": "2","comments": "This is a sample pipeline script to be added in your change step","work_notes": "Update this to work_notes","start_date": "","end_date": ""}}'
          change-request: '{"attributes":{"chg_model":{"name":"normal"}}}'
          # You can specify the requested_by attribute either with name or sys_id. Example: "requested_by":{"name": "Test User"} or "requested_by": "62826bf03710200044e0bfc8bcbe5df1"
          # You can specify the assignment_group attribute either with name or sys_id. Example: "assignment_group":{"name": "Change Approval Team"} or "assignment_group": "5f721d93c0a8010e015533746de18bf9"
          # start_date: Enter the planned start date
          # end_date: Enter the planned end date
          
  deploy:
    name: 'Deploy'
    needs: change
    runs-on: ubuntu-latest
    steps:
    - name: Run deployment scripts
      run: echo 'Deployment step in progress...'
